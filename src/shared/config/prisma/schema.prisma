generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql" 
    url      = env("POSTGRES_URL")
     directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
    id Int @id @default(autoincrement()) 

    fullName String
    email String @unique
    password String
    
    cart Cart?
    orders Order[]
    verificationCode VerficationCode?
    role  UserRole


    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Category {
    id Int @id @default(autoincrement())
    name String @unique
    products Product[]
  
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Product {
    id Int @id @default(autoincrement())

    name String
    imageUrl String
    
    ingeredients Ingredient[]
    items ProductItem[]

    category Category @relation(fields: [categoryId], references: [id])
    categoryId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model ProductItem {
    id Int @id @default(autoincrement())

    price Int
    size Int? 
    pizzaType Int?

    cartItems CartItem[]

    product Product  @relation(fields: [productId], references: [id])
    productId Int
}

model Ingredient {
    id Int @id @default(autoincrement())

    name String
    price Int
    imageUrl String

    products Product[]
    cartItems CartItem[]


    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Cart {
    id Int @id @default(autoincrement())

    user  User? @relation(fields: [userId], references: [id])
    userId  Int @unique
    
    token String

    items CartItem[]

    totalAmount Int @default(0)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model CartItem {
    id Int @id @default(autoincrement())

    productItem ProductItem @relation(fields: [productItemId], references: [id])
    productItemId Int

    cart Cart @relation(fields: [cartId], references: [id])
    cartId Int

    quantity Int

    ingeredients Ingredient[]
}


model Order {
    id Int @id @default(autoincrement())
    
    user User? @relation(fields: [userId], references: [id])
    userId Int?

    token String

    totalAmount Int
    status OrderStatus
    paymentId String?

    items Json

   fullName String
   address String
   phone String
   email String
   comment String?
   
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model VerficationCode {
    id  Int @id @default(autoincrement())

    user  User @relation(fields: [userId], references: [id])
    userId Int @unique

    code String

    createdAt DateTime @default(now())
}

enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}

enum UserRole {
    ADMIN
    USER
}